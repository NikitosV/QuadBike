@model IEnumerable<QuadBike.Model.ViewModel.CommentViewModels.CommentViewModel>
@{
    ViewData["Title"] = "TestChat";
}

<h1>Test Chat</h1>
<link rel="stylesheet" href="~/css/site.css" />

<div class="container">
    <div id="errorComment"></div>
    @if (User.IsInRole("user"))
    {
        Html.RenderPartial("AddComment");
    }
    <div class="container" id="comments">
        @{Html.RenderPartial("TestComments", Model);}
    </div>

</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#form1").submit(function (e) {
            return false;
        });
        $("#addCom").click(function () {
            var content = $("#inputContentComment").val();
            var providerId = $("#idProvider").val();
            $.ajax({
                type: 'POST',
                url: '/Comment/Create',
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                data: {
                    Content: content,
                    AccountId: providerId
                },
                statusCode: {
                    400: function (content) {
                        alert(content.statusText);
                        //var errors = $.parseJSON(err);
                        //validator.showErrors(errors);
                    }
                },
                //success: function (result) {
                //    $("#comments").append(result);
                success: function (data) {

                    if ($.isEmptyObject(data.error)) {

                        alert(data.success);

                    } else {

                        printErrorMsg(data.error);

                    }
                },
                //error: function (result) {
                //    debugger;
                //    //$("errorComment").ajaxError(alert(err.statusText));
                //    alert(result.statusText);

                //}
                //error: function (data) {
                //    var errors = data.responseJSON;
                //    console.log(errors);
                //}
                error: function (response) {
                    debugger;
                    alert(response);
                }

            });
        });
        function printErrorMsg(msg) {

            $(".print-error-msg").find("ul").html('');

            $(".print-error-msg").css('display', 'block');

            $.each(msg, function (key, value) {

                $(".print-error-msg").find("ul").append('<li>' + value + '</li>');

            });

        }
    });
</script>
@*if (xhr.status == 400) {
        DisplayModelStateErrors(xhr.responseJSON.ModelState);
    }*@
